version: 1.0.{build}

environment:
  matrix:
  - COMPILER: gcc
    PLATFORM: cygwin64

install:
  # Set Environment
  - SET PATH_ORIGINAL=%PATH%
  - SET "PATH_CYGWIN64=c:\cygwin64\bin"
  - SET PATH=%PATH_CYGWIN64%;%PATH_ORIGINAL%
  - SET WORK_DIR=c:\projects
  - SET WORK_DIR_IN_CYGWIN=/cygdrive/c/projects
  - SET CYGWIN64_DIR=/cygdrive/c/cygwin64
  - SET GIT_TAG_OR_BRANCH=swift-4.0.3+cygwin.20180212
  #- SET GIT_TAG_OR_BRANCH=swift-windows-4.0-branch
  - CD %WORK_DIR%
  
  # Install packages
  - C:\cygwin64\setup-x86_64.exe -qnNdO -R C:/cygwin64 -s http://cygwin.mirror.constant.com -l C:/cygwin64/var/cache/setup
    -P cmake
    -P ninja
    -P clang
    -P pkg-config
    -P python
    -P wget
    -P libiconv-devel
    -P libicu-devel
    -P libxml2
    -P libedit-devel
    -P python
    -P gcc
    -P g++
  # workaround for llvm-tblgen.exe error "Unknown pseudo relocation protocol version 256."
  - wget -q http://cygwin.mirror.constant.com/x86_64/release/binutils/binutils-2.25-4.tar.xz
  - tar -x -C / -f binutils-2.25-4.tar.xz
      
  # Download source
  - CD %WORK_DIR%
  # llvm source (need for cmake/modules/LLVM-Config.cmake at least)
  - wget -q -O llvm_src.tar.gz https://github.com/tinysun212/swift-llvm/archive/%GIT_TAG_OR_BRANCH%.tar.gz
  - tar zxf llvm_src.tar.gz
  - MOVE swift-llvm-%GIT_TAG_OR_BRANCH% llvm
  # clang source (error at cmake/modules/SwiftSharedCMakeConfig.cmake:146)
  - wget -q -O clang_src.tar.gz https://github.com/tinysun212/swift-clang/archive/%GIT_TAG_OR_BRANCH%.tar.gz
  # Pre-extract the targets of the symbolic links
  # The Windows native symbolic link system cann't create a symbolic link to non-exist target.
  - tar zxf clang_src.tar.gz 
      swift-clang-%GIT_TAG_OR_BRANCH%/test/Driver/Inputs/basic_cross_linux_tree/usr/bin/i386-unknown-linux-gnu-ld.gold
      swift-clang-%GIT_TAG_OR_BRANCH%/test/Driver/Inputs/basic_cross_linux_tree/usr/bin/x86_64-unknown-linux-gnu-ld.gold
      swift-clang-%GIT_TAG_OR_BRANCH%/test/Driver/Inputs/basic_cross_linux_tree/usr/i386-unknown-linux-gnu/bin/ld.gold
      swift-clang-%GIT_TAG_OR_BRANCH%/test/Driver/Inputs/basic_cross_linux_tree/usr/x86_64-unknown-linux-gnu/bin/ld.gold
      swift-clang-%GIT_TAG_OR_BRANCH%/test/Driver/Inputs/multilib_32bit_linux_tree/usr/bin/i386-unknown-linux-gnu-as
      swift-clang-%GIT_TAG_OR_BRANCH%/test/Driver/Inputs/multilib_32bit_linux_tree/usr/bin/i386-unknown-linux-gnu-ld
      swift-clang-%GIT_TAG_OR_BRANCH%/test/Driver/Inputs/multilib_64bit_linux_tree/usr/bin/x86_64-unknown-linux-gnu-as
      swift-clang-%GIT_TAG_OR_BRANCH%/test/Driver/Inputs/multilib_64bit_linux_tree/usr/bin/x86_64-unknown-linux-gnu-ld
  - tar zxf clang_src.tar.gz
  - MOVE swift-clang-%GIT_TAG_OR_BRANCH% clang
  # link clang into llvm
  - CD %WORK_DIR%/llvm/tools
  - MKLINK /d clang ..\..\clang
  # cmark source
  - git clone https://github.com/apple/swift-cmark.git %WORK_DIR_IN_CYGWIN%/cmark
  - CD %WORK_DIR%/cmark & git checkout -qf master & CD ..
  # swift source
  - git clone https://github.com/tinysun212/swift-windows.git %WORK_DIR_IN_CYGWIN%/swift
  - CD %WORK_DIR%/swift & git checkout -qf %GIT_TAG_OR_BRANCH% & CD ..
    
build_script:
  # Build cmark
  - MKDIR %WORK_DIR%\build\Ninja-ReleaseAssert\cmark-cygwin-x86_64
  - CD %WORK_DIR%/build/Ninja-ReleaseAssert/cmark-cygwin-x86_64
  - cmake -G Ninja -D CMAKE_BUILD_TYPE=RELEASE -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ %WORK_DIR_IN_CYGWIN%/cmark
  - ninja
  - CD src
  - cp -p libcmark.dll.a libcmark.a
  - cp -p libcmark.a %WORK_DIR_IN_CYGWIN%/swift/libcmark.a

  # Load llvm/clang lib
  - MKDIR %WORK_DIR%\build\Ninja-ReleaseAssert\llvm-cygwin-x86_64
  - CD %WORK_DIR%/build/Ninja-ReleaseAssert/llvm-cygwin-x86_64
  #  Get llvm-builder-cygwin artifact
  - wget -q https://ci.appveyor.com/api/projects/tinysun212/llvm-builder-tugj7/artifacts/swift_llvm_bin.tar.gz
  - tar zxf swift_llvm_bin.tar.gz
  # Make the include path `/usr/lib/gcc/i686-pc-cygwin/4.7.3/inlcude/c++/i686-pc-cygwin` exist.
  - CD c:/cygwin64/lib/gcc
  - MKLINK /D i686-pc-cygwin x86_64-pc-cygwin
  - CD i686-pc-cygwin
  - MKLINK /D 4.7.3 6.4.0
  - CD 4.7.3/include/c++
  - MKLINK /D i686-pc-cygwin x86_64-pc-cygwin
  
  # Build swift
  - MKDIR %WORK_DIR%\build\Ninja-ReleaseAssert\swift-cygwin-x86_64
  - CD %WORK_DIR%/build/Ninja-ReleaseAssert/swift-cygwin-x86_64
  # cmark patch
  - MKDIR bin
  - cp -p %WORK_DIR_IN_CYGWIN%/build/Ninja-ReleaseAssert/cmark-cygwin-x86_64/src/cygcmark-0.22.0.dll bin
  - cmake -G "Ninja" ../../../swift -DCMAKE_CXX_FLAGS="-mcmodel=large" -DCMAKE_BUILD_TYPE=Release 
    -DCMAKE_ASM_COMPILER=%WORK_DIR_IN_CYGWIN%/build/Ninja-ReleaseAssert/llvm-cygwin-x86_64/bin/clang.exe
    -DCMAKE_C_COMPILER=%WORK_DIR_IN_CYGWIN%/build/Ninja-ReleaseAssert/llvm-cygwin-x86_64/bin/clang.exe
    -DCMAKE_CXX_COMPILER=%WORK_DIR_IN_CYGWIN%/build/Ninja-ReleaseAssert/llvm-cygwin-x86_64/bin/clang++.exe
    -DPKG_CONFIG_EXECUTABLE=%CYGWIN64_DIR%/bin/pkg-config
    -DICU_UC_INCLUDE_DIR=%CYGWIN64_DIR%/include -DICU_UC_LIBRARY=%CYGWIN64_DIR%/lib/libicuuc.dll.a 
    -DICU_I18N_INCLUDE_DIR=%CYGWIN64_DIR%/include -DICU_I18N_LIBRARY=%CYGWIN64_DIR%/lib/libicui18n.dll.a
    -DSWIFT_INCLUDE_DOCS=FALSE
    -DSWIFT_PATH_TO_CMARK_BUILD=%WORK_DIR_IN_CYGWIN%/build/Ninja-ReleaseAssert/cmark-cygwin-x86_64
    -DSWIFT_PATH_TO_CMARK_SOURCE=%WORK_DIR_IN_CYGWIN%/cmark
    -DSWIFT_PATH_TO_LLVM_SOURCE=%WORK_DIR_IN_CYGWIN%/llvm
    -DSWIFT_PATH_TO_LLVM_BUILD=%WORK_DIR_IN_CYGWIN%/build/Ninja-ReleaseAssert/llvm-cygwin-x86_64
    -DSWIFT_STDLIB_ASSERTIONS:BOOL=TRUE
    %WORK_DIR_IN_CYGWIN%/swift
  - ninja

  # Build fake Glibc
  - CD %WORK_DIR%/build/Ninja-ReleaseAssert/swift-cygwin-x86_64/lib/swift/cygwin/x86_64
  - ECHO @_exported import Newlib > Glibc.swift
  - env ../../../../bin/swiftc -parse-as-library -emit-module Glibc.swift
  # Move *.dll.a from cygwin/x86_64 to cygwin
  - MOVE *.dll.a ..
  
after_build:
  # Convert absolute path to relative path in newlib.modulemap
  - CD %WORK_DIR%/build/Ninja-ReleaseAssert/swift-cygwin-x86_64/lib/swift/cygwin/x86_64
  - sed -i -e 's;/cygdrive/c/cygwin64;../../../../..;' newlib.modulemap
  # Replace the linked clang headers to the real files 
  - CD %WORK_DIR%/build/Ninja-ReleaseAssert/swift-cygwin-x86_64/lib/swift
  - rm clang
  - cp -rp %WORK_DIR_IN_CYGWIN%/build/Ninja-ReleaseAssert/llvm-cygwin-x86_64/lib/clang/4.0.0 clang
  # Archiving to swift.zip
  - CD %WORK_DIR%/build/Ninja-ReleaseAssert
  - mv swift-cygwin-x86_64 usr
  - 7z a swift.zip usr/bin/swift.exe usr/bin/*.dll usr/lib/swift
  - mv swift.zip %APPVEYOR_BUILD_FOLDER%

test_script:
  - 'echo skip test'
  
artifacts:
  - path: swift.zip
    name: SWIFT
